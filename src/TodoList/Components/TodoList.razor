@page "/todolist"
@using Microsoft.EntityFrameworkCore
@using global::TodoList.Data
@using global::TodoList.Models
@using global::TodoList.Sevices;
@inject DataBaseService DataBaseService;
@rendermode InteractiveServer

<h3>Todo  (@m_TodoList.Items.Count(todo => !todo.IsDone))</h3>

<ul>
    @foreach (var todo in m_TodoList.Items)
    {
        <li>
            <TodoItemComponent TodoItem="todo" OnRemove="RemoveItem" OnEdit="EditItem" />
        </li>
    }
</ul>

<input @bind="newTodo" />
<button @onclick="AddTodo">Add todo</button>

@code {
    private TodoItemCollection m_TodoList;
    string newTodo = "";

    private async void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            var todoItem = m_TodoList.Add(newTodo);
            await DataBaseService.CreateTodoItemAsync(todoItem);
        }
    }

    private async void RemoveItem(TodoItem item)
    {
        await DataBaseService.DeleteTodoItemAsync(item.Id);
        m_TodoList.Remove(item);
    }

    private async void EditItem(TodoItem item)
    {
        await DataBaseService.UpdateTodoItemAsync(item);
    }

    protected override async Task OnInitializedAsync()
    {
        m_TodoList = new TodoItemCollection();
        var todoItems = await DataBaseService.GetTodoItemsAsync();
        m_TodoList.Add(todoItems);
    }
}


